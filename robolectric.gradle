android.testOptions.unitTests.all {
    // full options: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html
    maxHeapSize = rootProject.ext.ci ? "3584m" : "2048m"
    forkEvery = 4
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        exceptionFormat 'full'
    }
    jacoco {
        includeNoLocationClasses = true
    }
    reports {
        html.enabled = false
        junitXml.enabled = false
    }
    include rootProject.hasProperty("testSuite") ? "**/${rootProject.ext.testSuite}.class" : "**/*Test.class"
    systemProperty 'robolectric.buildDir', buildDir
}

ext {
    assertjVersion = '1.1.1'
    robolectricVersion = '3.2'
}

dependencies {
    testImplementation "org.robolectric:robolectric:$robolectricVersion",
            "org.robolectric:shadows-support-v4:$robolectricVersion",
            'org.mockito:mockito-core:2.1.0',
            'junit:junit:4.12',
            'io.takari.junit:takari-cpsuite:1.2.7'
    testImplementation("com.squareup.assertj:assertj-android:$assertjVersion") {
            exclude group: 'com.android.support', module: 'support-annotations'
    }
    testImplementation("com.squareup.assertj:assertj-android-support-v4:$assertjVersion") {
            exclude group: 'com.android.support', module: 'support-annotations'
            exclude group: 'com.android.support', module: 'support-v4' // see robolectric/robolectric#1633
    }
    testImplementation("com.squareup.assertj:assertj-android-appcompat-v7:$assertjVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat-v7' // see robolectric/robolectric#1633
    }
}
